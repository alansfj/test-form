{"version":3,"sources":["components/CustomInput.jsx","components/SaveButton.jsx","helpers/validate.js","helpers/regex.js","hooks/useForm.js","components/GridContainerWrapper.jsx","components/AddressForm.jsx","components/BankForm.jsx","components/BasicInfoForm.jsx","components/CustomSelect.jsx","components/BeneficiaryForm.jsx","components/FormContainer.jsx","components/LegalRepresentativeForm.jsx","App.js","index.js"],"names":["CustomInput","type","name","label","error","accept","value","handleChange","handleBlur","className","onChange","onBlur","autoComplete","length","SaveButton","ButtonText","isDisabled","isDisabledForm","form","disabled","memo","validate","target","regex","formProperty","str","setError","text","test","trim","useForm","initialForm","useState","setForm","errors","setErrors","disableSaveButtonError","Object","values","filter","e","handleSubmit","preventDefault","alert","GridContainerWrapper","children","columns","gap","style","gridTemplateColumns","columnGap","calle","numeroExt","numeroInt","codigoPostal","colonia","municipio","ciudad","estado","pais","comprobanteDomicilio","telefonoDomicilio","AddressForm","formTitle","onSubmit","errorsObj","clabe","banco","BankForm","razonSocial","nombreComercial","email","nacionalidad","fechaConstitucion","fechaInicio","rfc","regimenFiscal","industria","BasicInfoForm","CustomSelect","options","genero","map","option","i","nombre","fechaNacimiento","curp","domicilio","telefono","BeneficiaryForm","FormContainer","entidadNacimiento","paisNacimiento","estadoCivil","documentoID","LegalRepresentativeForm","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d2eb3099.chunk.js","sourcesContent":["import React from \"react\";\nimport \"../Sass/CustomInput.scss\";\n\nconst CustomInput = ({\n  type,\n  name,\n  label,\n  error,\n  accept,\n  value,\n  handleChange,\n  handleBlur,\n}) => {\n  return (\n    <div className=\"input-label-container\">\n      <input\n        type={type || \"text\"}\n        accept={accept || \"\"}\n        onChange={handleChange}\n        onBlur={handleBlur}\n        autoComplete=\"off\"\n        name={name}\n      />\n      <label className={`label ${value.length ? \"shrink\" : \"\"}`}>{label}</label>\n      {/* <p>Validación</p> */}\n      <p>{error || \" \"}</p>\n    </div>\n  );\n};\n\nexport default CustomInput;\n","import React, { memo } from \"react\";\nimport \"../Sass/SaveButton.scss\";\n\nconst SaveButton = ({ ButtonText, isDisabled, isDisabledForm, form }) => {\n  return (\n    <div className=\"btn-container\">\n      {isDisabled ? (\n        <input\n          type=\"submit\"\n          value={ButtonText || \"Guardar\"}\n          disabled\n          className=\"save-btn\"\n        />\n      ) : (\n        <input\n          type=\"submit\"\n          value={ButtonText || \"Guardar\"}\n          className=\"save-btn\"\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(SaveButton);\n","const validate = (target, regex, formProperty, str, setError, error, text) => {\n  if (target.name === str) {\n    if (!regex.test(formProperty.trim()) && formProperty) {\n      setError({\n        ...error,\n        [str]: text,\n      });\n    } else {\n      setError({ ...error, [str]: \"\" });\n    }\n  }\n};\n\nexport { validate };\n","export const regex = {\n  Email: /^(\\w+[/./-]?){1,}@[a-z]+[/.]\\w{2,}$/,\n  OnlyLetters: /^[A-Za-zÑñÁáÉéÍíÓóÚúÜü\\s]+$/,\n  OnlyNumbers: /^[0-9]*$/,\n  Name: /^[A-Za-zÑñÁáÉéÍíÓóÚúÜü\\s.]+$/,\n  CURP: /^([A-Z][AEIOUX][A-Z]{2}\\d{2}(?:0[1-9]|1[0-2])(?:0[1-9]|[12]\\d|3[01])[HM](?:AS|B[CS]|C[CLMSH]|D[FG]|G[TR]|HG|JC|M[CNS]|N[ETL]|OC|PL|Q[TR]|S[PLR]|T[CSL]|VZ|YN|ZS)[B-DF-HJ-NP-TV-Z]{3}[A-Z\\d])(\\d)$/,\n  RFC: /^(([ÑA-Z|ña-z|&]{3}|[A-Z|a-z]{4})\\d{2}((0[1-9]|1[012])(0[1-9]|1\\d|2[0-8])|(0[13456789]|1[012])(29|30)|(0[13578]|1[02])31)(\\w{2})([A|a|0-9]{1}))$|^(([ÑA-Z|ña-z|&]{3}|[A-Z|a-z]{4})([02468][048]|[13579][26])0229)(\\w{2})([A|a|0-9]{1})$/,\n};\n","import { useState } from \"react\";\n\nconst useForm = initialForm => {\n  const [form, setForm] = useState(initialForm);\n  const [errors, setErrors] = useState({});\n\n  const errorsArray = Object.values(errors);\n  const filteredErrorsArray = errorsArray.filter(error => error !== \"\");\n  const disableSaveButtonError = filteredErrorsArray.length;\n\n  const handleChange = e => {\n    setForm({\n      ...form,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    alert(\"Los datos se han guardado con éxito.\");\n  };\n\n  return {\n    form,\n    setForm,\n    errors,\n    disableSaveButtonError,\n    setErrors,\n    handleChange,\n    handleSubmit,\n  };\n};\n\nexport { useForm };\n","import React from \"react\";\nimport \"../Sass/GridContainerWrapper.scss\";\n\nconst GridContainerWrapper = ({ children, columns, gap }) => {\n  return (\n    <div\n      className=\"grid-container\"\n      style={{\n        gridTemplateColumns: `${columns || `repeat(${children.length}, 1fr)`}`,\n        columnGap: `${gap || \"3rem\"}`,\n      }}\n    >\n      {children}\n    </div>\n  );\n};\n\nexport default GridContainerWrapper;\n","import React from \"react\";\nimport CustomInput from \"./CustomInput\";\nimport SaveButton from \"./SaveButton\";\nimport \"../Sass/AllFormsStyles.scss\";\nimport { validate } from \"../helpers/validate\";\nimport { regex } from \"../helpers/regex\";\nimport { useForm } from \"../hooks/useForm\";\nimport GridContainerWrapper from \"./GridContainerWrapper\";\n\nconst initialForm = {\n  calle: \"\",\n  numeroExt: \"\",\n  numeroInt: \"\",\n  codigoPostal: \"\",\n  colonia: \"\",\n  municipio: \"\",\n  ciudad: \"\",\n  estado: \"\",\n  pais: \"\",\n  comprobanteDomicilio: \"\",\n  telefonoDomicilio: \"\",\n};\n\nconst AddressForm = ({ formTitle }) => {\n  const {\n    form,\n    errors,\n    disableSaveButtonError,\n    setErrors,\n    handleChange,\n    handleSubmit,\n  } = useForm(initialForm);\n\n  const handleBlur = e => {\n    validate(\n      e.target,\n      regex.OnlyLetters,\n      form.pais,\n      \"pais\",\n      setErrors,\n      errors,\n      \"Solo se permiten letras\"\n    );\n\n    validate(\n      e.target,\n      regex.OnlyLetters,\n      form.estado,\n      \"estado\",\n      setErrors,\n      errors,\n      \"Solo se permiten letras\"\n    );\n\n    validate(\n      e.target,\n      regex.OnlyLetters,\n      form.municipio,\n      \"municipio\",\n      setErrors,\n      errors,\n      \"Solo se permiten letras\"\n    );\n\n    validate(\n      e.target,\n      regex.OnlyLetters,\n      form.ciudad,\n      \"ciudad\",\n      setErrors,\n      errors,\n      \"Solo se permiten letras\"\n    );\n\n    validate(\n      e.target,\n      regex.OnlyNumbers,\n      form.codigoPostal,\n      \"codigoPostal\",\n      setErrors,\n      errors,\n      \"Solo se permiten números\"\n    );\n\n    validate(\n      e.target,\n      regex.OnlyNumbers,\n      form.numeroExt,\n      \"numeroExt\",\n      setErrors,\n      errors,\n      \"Solo se permiten números\"\n    );\n\n    validate(\n      e.target,\n      regex.OnlyNumbers,\n      form.numeroInt,\n      \"numeroInt\",\n      setErrors,\n      errors,\n      \"Solo se permiten números\"\n    );\n\n    validate(\n      e.target,\n      regex.OnlyNumbers,\n      form.telefonoDomicilio,\n      \"telefonoDomicilio\",\n      setErrors,\n      errors,\n      \"Solo se permiten números\"\n    );\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"form\">\n      <GridContainerWrapper>\n        <CustomInput\n          name=\"pais\"\n          label=\"País\"\n          error={errors.pais}\n          handleChange={handleChange}\n          value={form.pais}\n          handleBlur={handleBlur}\n        />\n        <CustomInput\n          name=\"estado\"\n          label=\"Estado\"\n          error={errors.estado}\n          handleChange={handleChange}\n          value={form.estado}\n          handleBlur={handleBlur}\n        />\n      </GridContainerWrapper>\n      <GridContainerWrapper>\n        <CustomInput\n          name=\"municipio\"\n          label=\"Municipio\"\n          error={errors.municipio}\n          handleChange={handleChange}\n          value={form.municipio}\n          handleBlur={handleBlur}\n        />\n        <CustomInput\n          name=\"ciudad\"\n          label=\"Ciudad\"\n          error={errors.ciudad}\n          handleChange={handleChange}\n          value={form.ciudad}\n          handleBlur={handleBlur}\n        />\n      </GridContainerWrapper>\n      <GridContainerWrapper columns=\"1fr 1fr\">\n        <CustomInput\n          name=\"colonia\"\n          label=\"Colonia\"\n          error={errors.colonia}\n          handleChange={handleChange}\n          value={form.colonia}\n          handleBlur={handleBlur}\n        />\n        <CustomInput\n          name=\"calle\"\n          label=\"Calle\"\n          error={errors.calle}\n          handleChange={handleChange}\n          value={form.calle}\n          handleBlur={handleBlur}\n        />\n      </GridContainerWrapper>\n      <GridContainerWrapper columns=\"1fr 1fr 1fr\">\n        <CustomInput\n          type=\"number\"\n          name=\"codigoPostal\"\n          label=\"Código Postal\"\n          error={errors.codigoPostal}\n          handleChange={handleChange}\n          value={form.codigoPostal}\n          handleBlur={handleBlur}\n        />\n        <CustomInput\n          type=\"number\"\n          name=\"numeroExt\"\n          label=\"Número Ext\"\n          error={errors.numeroExt}\n          handleChange={handleChange}\n          value={form.numeroExt}\n          handleBlur={handleBlur}\n        />\n        <CustomInput\n          type=\"number\"\n          name=\"numeroInt\"\n          label=\"Número Int\"\n          error={errors.numeroInt}\n          handleChange={handleChange}\n          value={form.numeroInt}\n          handleBlur={handleBlur}\n        />\n      </GridContainerWrapper>\n      <GridContainerWrapper>\n        <CustomInput\n          type=\"file\"\n          name=\"comprobanteDomicilio\"\n          label=\"Comprobante de domicilio\"\n          handleChange={handleChange}\n          value={form.comprobanteDomicilio}\n        />\n        <CustomInput\n          type=\"number\"\n          name=\"telefonoDomicilio\"\n          label=\"No. Teléfono del Domicilio\"\n          error={errors.telefonoDomicilio}\n          handleChange={handleChange}\n          value={form.telefonoDomicilio}\n          handleBlur={handleBlur}\n        />\n      </GridContainerWrapper>\n      <SaveButton errorsObj={errors} isDisabled={disableSaveButtonError} />\n    </form>\n  );\n};\n\nexport default AddressForm;\n","import React from \"react\";\nimport CustomInput from \"./CustomInput\";\nimport SaveButton from \"./SaveButton\";\nimport \"../Sass/AllFormsStyles.scss\";\nimport { validate } from \"../helpers/validate\";\nimport { regex } from \"../helpers/regex\";\nimport { useForm } from \"../hooks/useForm\";\nimport GridContainerWrapper from \"./GridContainerWrapper\";\n\nconst initialForm = {\n  clabe: \"\",\n  banco: \"\",\n};\n\nconst BankForm = ({ formTitle }) => {\n  const {\n    form,\n    errors,\n    disableSaveButtonError,\n    setErrors,\n    handleChange,\n    handleSubmit,\n  } = useForm(initialForm);\n\n  const handleBlur = e => {\n    validate(\n      e.target,\n      regex.OnlyNumbers,\n      form.clabe,\n      \"clabe\",\n      setErrors,\n      errors,\n      \"Solo se permiten números\"\n    );\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"form\">\n      <GridContainerWrapper>\n        <CustomInput\n          type=\"number\"\n          name=\"clabe\"\n          label=\"CLABE\"\n          error={errors.clabe}\n          handleChange={handleChange}\n          value={form.clabe}\n          handleBlur={handleBlur}\n        />\n        <CustomInput\n          name=\"banco\"\n          label=\"Banco\"\n          handleChange={handleChange}\n          value={form.banco}\n        />\n      </GridContainerWrapper>\n      <SaveButton errorsObj={errors} isDisabled={disableSaveButtonError} />\n    </form>\n  );\n};\n\nexport default BankForm;\n","import React from \"react\";\nimport { validate } from \"../helpers/validate\";\nimport \"../Sass/AllFormsStyles.scss\";\nimport CustomInput from \"./CustomInput\";\nimport SaveButton from \"./SaveButton\";\nimport { regex } from \"../helpers/regex\";\nimport { useForm } from \"../hooks/useForm\";\nimport GridContainerWrapper from \"./GridContainerWrapper\";\n\nconst initialForm = {\n  razonSocial: \"\",\n  nombreComercial: \"\",\n  email: \"\",\n  nacionalidad: \"\",\n  fechaConstitucion: \"\",\n  fechaInicio: \"\",\n  rfc: \"\",\n  regimenFiscal: \"\",\n  industria: \"\",\n};\n\nconst BasicInfoForm = () => {\n  const {\n    form,\n    errors,\n    disableSaveButtonError,\n    setErrors,\n    handleChange,\n    handleSubmit,\n  } = useForm(initialForm);\n\n  const handleBlur = e => {\n    validate(\n      e.target,\n      regex.Email,\n      form.email,\n      \"email\",\n      setErrors,\n      errors,\n      \"Introduzca un email válido\"\n    );\n\n    validate(\n      e.target,\n      regex.OnlyLetters,\n      form.nacionalidad,\n      \"nacionalidad\",\n      setErrors,\n      errors,\n      \"Solo se permites letras\"\n    );\n\n    validate(\n      e.target,\n      regex.RFC,\n      form.rfc,\n      \"rfc\",\n      setErrors,\n      errors,\n      \"Introduzca un RFC válido\"\n    );\n\n    validate(\n      e.target,\n      regex.OnlyLetters,\n      form.industria,\n      \"industria\",\n      setErrors,\n      errors,\n      \"Solo se permiten letras\"\n    );\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"form\">\n      <CustomInput\n        label=\"Razón Social\"\n        error={errors.razonSocial}\n        value={form.razonSocial}\n        name=\"razonSocial\"\n        handleChange={handleChange}\n        handleBlur={handleBlur}\n      ></CustomInput>\n      <CustomInput\n        label=\"Nombre Comercial\"\n        error={errors.nombreComercial}\n        value={form.nombreComercial}\n        name=\"nombreComercial\"\n        handleChange={handleChange}\n        handleBlur={handleBlur}\n      ></CustomInput>\n      <CustomInput\n        label=\"Email\"\n        error={errors.email}\n        value={form.email}\n        name=\"email\"\n        handleChange={handleChange}\n        handleBlur={handleBlur}\n      ></CustomInput>\n      <CustomInput\n        label=\"Nacionalidad\"\n        error={errors.nacionalidad}\n        value={form.nacionalidad}\n        name=\"nacionalidad\"\n        handleChange={handleChange}\n        handleBlur={handleBlur}\n      ></CustomInput>\n      <GridContainerWrapper>\n        <CustomInput\n          type=\"date\"\n          label=\"Fecha de constitución\"\n          error={errors.fechaConstitucion}\n          value={form.fechaConstitucion}\n          name=\"fechaConstitucion\"\n          handleChange={handleChange}\n          handleBlur={handleBlur}\n        ></CustomInput>\n        <CustomInput\n          type=\"date\"\n          label=\"Fecha de inicio de opreación\"\n          error={errors.fechaInicio}\n          value={form.fechaInicio}\n          name=\"fechaInicio\"\n          handleChange={handleChange}\n          handleBlur={handleBlur}\n        ></CustomInput>\n      </GridContainerWrapper>\n      <CustomInput\n        label=\"RFC\"\n        error={errors.rfc}\n        value={form.rfc}\n        name=\"rfc\"\n        handleChange={handleChange}\n        handleBlur={handleBlur}\n      ></CustomInput>\n      <CustomInput\n        label=\"Régimen Fiscal\"\n        error={errors.regimenFiscal}\n        value={form.regimenFiscal}\n        name=\"regimenFiscal\"\n        handleChange={handleChange}\n        handleBlur={handleBlur}\n      ></CustomInput>\n      <CustomInput\n        label=\"Industria\"\n        error={errors.industria}\n        value={form.industria}\n        name=\"industria\"\n        handleChange={handleChange}\n        handleBlur={handleBlur}\n      ></CustomInput>\n      <SaveButton\n        errorsObj={errors}\n        isDisabled={disableSaveButtonError}\n        form={form}\n      />\n    </form>\n  );\n};\n\nexport default BasicInfoForm;\n","import React from \"react\";\nimport \"../Sass/CustomSelect.scss\";\n\nconst CustomSelect = ({ label, value, handleChange, options, name }) => {\n  return (\n    <div className=\"select-container\">\n      <select onChange={handleChange} value={value.genero} name={name}>\n        <option></option>\n        {options.map((option, i) => (\n          <option key={i}>{option}</option>\n        ))}\n      </select>\n      <label className={`label ${value.length ? \"shrink\" : \"\"}`}>{label}</label>\n    </div>\n  );\n};\n\nexport default CustomSelect;\n","import React from \"react\";\nimport \"../Sass/AllFormsStyles.scss\";\nimport CustomInput from \"./CustomInput\";\nimport SaveButton from \"./SaveButton\";\nimport { validate } from \"../helpers/validate\";\nimport CustomSelect from \"./CustomSelect\";\nimport { regex } from \"../helpers/regex\";\nimport { useForm } from \"../hooks/useForm\";\nimport GridContainerWrapper from \"./GridContainerWrapper\";\n\nconst initialForm = {\n  nombre: \"\",\n  fechaNacimiento: \"\",\n  curp: \"\",\n  genero: \"\",\n  domicilio: \"\",\n  telefono: \"\",\n  email: \"\",\n};\n\nconst BeneficiaryForm = ({ formTitle }) => {\n  const {\n    form,\n    errors,\n    disableSaveButtonError,\n    setErrors,\n    handleChange,\n    handleSubmit,\n  } = useForm(initialForm);\n\n  const handleBlur = e => {\n    validate(\n      e.target,\n      regex.Name,\n      form.nombre,\n      \"nombre\",\n      setErrors,\n      errors,\n      \"Solo se permiten letras y punto ( . )\"\n    );\n\n    validate(\n      e.target,\n      regex.CURP,\n      form.curp,\n      \"curp\",\n      setErrors,\n      errors,\n      \"Introduzca un CURP válido\"\n    );\n\n    validate(\n      e.target,\n      regex.OnlyNumbers,\n      form.telefono,\n      \"telefono\",\n      setErrors,\n      errors,\n      \"Solo se permiten números\"\n    );\n\n    validate(\n      e.target,\n      regex.Email,\n      form.email,\n      \"email\",\n      setErrors,\n      errors,\n      \"Introduzca un email válido\"\n    );\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"form\">\n      <CustomInput\n        name=\"nombre\"\n        label=\"Nombre Completo\"\n        error={errors.nombre}\n        handleChange={handleChange}\n        value={form.nombre}\n        handleBlur={handleBlur}\n      />\n      <CustomSelect\n        label=\"Género\"\n        value={form.genero}\n        name=\"genero\"\n        options={[\"Masculino\", \"Femenino\"]}\n        handleChange={handleChange}\n      />\n      <GridContainerWrapper>\n        <CustomInput\n          type=\"date\"\n          name=\"fehcaNacimiento\"\n          label=\"Fecha de nacimiento\"\n          handleChange={handleChange}\n          value={form.fechaNacimiento}\n        />\n        <CustomInput\n          name=\"curp\"\n          label=\"CURP\"\n          error={errors.curp}\n          handleChange={handleChange}\n          value={form.curp}\n          handleBlur={handleBlur}\n        />\n      </GridContainerWrapper>\n\n      <CustomInput\n        name=\"domicilio\"\n        label=\"Domicilio\"\n        handleChange={handleChange}\n        value={form.domicilio}\n      />\n      <GridContainerWrapper>\n        <CustomInput\n          type=\"number\"\n          name=\"telefono\"\n          label=\"Teléfono\"\n          error={errors.telefono}\n          handleChange={handleChange}\n          value={form.telefono}\n          handleBlur={handleBlur}\n        />\n        <CustomInput\n          name=\"email\"\n          label=\"Email\"\n          error={errors.email}\n          handleChange={handleChange}\n          value={form.email}\n          handleBlur={handleBlur}\n        />\n      </GridContainerWrapper>\n      <SaveButton errorsObj={errors} isDisabled={disableSaveButtonError} />\n    </form>\n  );\n};\n\nexport default BeneficiaryForm;\n","import React from \"react\";\nimport \"../Sass/FormContainer.scss\";\n\nconst FormContainer = ({ formTitle, children }) => {\n  return (\n    <div className=\"container\">\n      <h2 className=\"form-title\"> {formTitle}</h2>\n      {children}\n    </div>\n  );\n};\n\nexport default FormContainer;\n","import React from \"react\";\nimport CustomInput from \"./CustomInput\";\nimport SaveButton from \"./SaveButton\";\nimport \"../Sass/AllFormsStyles.scss\";\nimport { validate } from \"../helpers/validate\";\nimport CustomSelect from \"./CustomSelect\";\nimport { regex } from \"../helpers/regex\";\nimport { useForm } from \"../hooks/useForm\";\nimport GridContainerWrapper from \"./GridContainerWrapper\";\n\nconst initialForm = {\n  nombre: \"\",\n  genero: \"\",\n  fechaNacimiento: \"\",\n  entidadNacimiento: \"\",\n  paisNacimiento: \"\",\n  curp: \"\",\n  rfc: \"\",\n  domicilio: \"\",\n  estadoCivil: \"\",\n  email: \"\",\n  telefono: \"\",\n  documentoID: \"\",\n};\n\nconst LegalRepresentativeForm = ({ formTitle }) => {\n  const {\n    form,\n    errors,\n    disableSaveButtonError,\n    setErrors,\n    handleChange,\n    handleSubmit,\n  } = useForm(initialForm);\n\n  const handleBlur = e => {\n    validate(\n      e.target,\n      regex.Name,\n      form.nombre,\n      \"nombre\",\n      setErrors,\n      errors,\n      \"Solo se permiten letras y punto ( . )\"\n    );\n\n    validate(\n      e.target,\n      regex.OnlyLetters,\n      form.paisNacimiento,\n      \"paisNacimiento\",\n      setErrors,\n      errors,\n      \"Solo se permiten letras\"\n    );\n\n    validate(\n      e.target,\n      regex.OnlyLetters,\n      form.entidadNacimiento,\n      \"entidadNacimiento\",\n      setErrors,\n      errors,\n      \"Solo se permiten letras\"\n    );\n\n    validate(\n      e.target,\n      regex.CURP,\n      form.curp,\n      \"curp\",\n      setErrors,\n      errors,\n      \"Introduzca un CURP válido\"\n    );\n\n    validate(\n      e.target,\n      regex.RFC,\n      form.rfc,\n      \"rfc\",\n      setErrors,\n      errors,\n      \"Introduzca un RFC válido\"\n    );\n\n    validate(\n      e.target,\n      regex.Email,\n      form.email,\n      \"email\",\n      setErrors,\n      errors,\n      \"Introduzca un email válido\"\n    );\n\n    validate(\n      e.target,\n      regex.OnlyNumbers,\n      form.telefono,\n      \"telefono\",\n      setErrors,\n      errors,\n      \"Solo se permiten números\"\n    );\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"form\">\n      <CustomInput\n        name=\"nombre\"\n        label=\"Nombre Completo\"\n        error={errors.nombre}\n        handleChange={handleChange}\n        value={form.nombre}\n        handleBlur={handleBlur}\n      />\n      <GridContainerWrapper>\n        <CustomSelect\n          label=\"Género\"\n          value={form.genero}\n          name=\"genero\"\n          options={[\"Masculino\", \"Femenino\"]}\n          handleChange={handleChange}\n        />\n\n        <CustomInput\n          type=\"date\"\n          name=\"fechaNacimiento\"\n          label=\"Fecha de nacimiento\"\n          handleChange={handleChange}\n          value={form.fechaNacimiento}\n        />\n      </GridContainerWrapper>\n      <GridContainerWrapper>\n        <CustomInput\n          name=\"paisNacimiento\"\n          label=\"País de Nacimiento\"\n          error={errors.paisNacimiento}\n          handleChange={handleChange}\n          value={form.paisNacimiento}\n          handleBlur={handleBlur}\n        />\n        <CustomInput\n          name=\"entidadNacimiento\"\n          label=\"Estado de Nacimiento\"\n          error={errors.entidadNacimiento}\n          handleChange={handleChange}\n          value={form.entidadNacimiento}\n          handleBlur={handleBlur}\n        />\n      </GridContainerWrapper>\n      <GridContainerWrapper>\n        <CustomInput\n          name=\"curp\"\n          label=\"CURP\"\n          error={errors.curp}\n          handleChange={handleChange}\n          value={form.curp}\n          handleBlur={handleBlur}\n        />\n        <CustomInput\n          name=\"rfc\"\n          label=\"RFC\"\n          error={errors.rfc}\n          handleChange={handleChange}\n          value={form.rfc}\n          handleBlur={handleBlur}\n        />\n      </GridContainerWrapper>\n      <CustomInput\n        name=\"domicilio\"\n        label=\"Domicilio Particular\"\n        handleChange={handleChange}\n        value={form.domicilio}\n      />\n      <CustomSelect\n        label=\"Estado Civil\"\n        value={form.estadoCivil}\n        name=\"estadoCivil\"\n        options={[\n          \"Soltero/a\",\n          \"Casado/a\",\n          \"Unión Libre\",\n          \"Separado/a\",\n          \"Divorciado/a\",\n          \"Viudo/a\",\n        ]}\n        handleChange={handleChange}\n      />\n      <GridContainerWrapper>\n        <CustomInput\n          name=\"email\"\n          label=\"Email\"\n          error={errors.email}\n          handleChange={handleChange}\n          value={form.email}\n          handleBlur={handleBlur}\n        />\n        <CustomInput\n          type=\"number\"\n          name=\"telefono\"\n          label=\"Teléfono\"\n          error={errors.telefono}\n          handleChange={handleChange}\n          value={form.telefono}\n          handleBlur={handleBlur}\n        />\n      </GridContainerWrapper>\n      <CustomInput\n        type=\"file\"\n        name=\"documentoID\"\n        label=\"Documento de Identificación\"\n        accept=\"image/*,.pdf,.doc,.docx\"\n        handleChange={handleChange}\n        value={form.documentoID}\n      />\n      <SaveButton errorsObj={errors} isDisabled={disableSaveButtonError} />\n    </form>\n  );\n};\n\nexport default LegalRepresentativeForm;\n","import AddressForm from \"./components/AddressForm\";\nimport BankForm from \"./components/BankForm\";\nimport BasicInfoForm from \"./components/BasicInfoForm\";\nimport BeneficiaryForm from \"./components/BeneficiaryForm\";\nimport FormContainer from \"./components/FormContainer\";\nimport LegalRepresentativeForm from \"./components/LegalRepresentativeForm\";\n\nfunction App() {\n  return (\n    <div>\n      <FormContainer formTitle=\"Información Básica\">\n        <BasicInfoForm />\n      </FormContainer>\n      <FormContainer formTitle=\"Domicilio\">\n        <AddressForm />\n      </FormContainer>\n      <FormContainer formTitle=\"Representante Legal\">\n        <LegalRepresentativeForm />\n      </FormContainer>\n      <FormContainer formTitle=\"Información Bancaria\">\n        <BankForm />\n      </FormContainer>\n      <FormContainer formTitle=\"Beneficiario\">\n        <BeneficiaryForm />\n      </FormContainer>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}